(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := __SYSVA_FIRST_SCAN ;
__EDTB2 := __EDTB1 ;
IF __EDTB2 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB3 := __EDTB1 ;
IF __EDTB3 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB4 := __EDTB1 ;
IF __EDTB4 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB5 := __EDTB1 ;
IF __EDTB5 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB6 := __EDTB1 ;
IF __EDTB6 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB7 := __EDTB1 ;
IF __EDTB7 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB8 := __EDTB1 ;
IF __EDTB8 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB9 := __EDTB1 ;
IF __EDTB9 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB10 := __EDTB1 ;
IF __EDTB10 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB11 := __EDTB1 ;
IF __EDTB11 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB12 := __EDTB1 ;
IF __EDTB12 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB13 := __EDTB1 ;
IF __EDTB13 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB14 := __EDTB1 ;
IF __EDTB14 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB15 := __EDTB1 ;
IF __EDTB15 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,16
__ENDSTEPPRAGMA
(*Label :*)(**)
(* FB call: R_TRIG *)
R_TRIG_1(HMI_MOVEFWD) ;
__EDTB16 := R_TRIG_1.Q ;
__EDTB17 := __EDTB16 ;
IF __EDTB17 THEN
(*Set coil*)
HMI_IND_FWDDIR := TRUE ;
END_IF ;
__EDTB18 := __EDTB16 ;
IF __EDTB18 THEN
(*Reset coil*)
HMI_IND_REVDIR := FALSE ;
END_IF ;
__EDTB19 := __EDTB16 ;
IF __EDTB19 THEN
(*Reset coil*)
HMI_MOVEREV := FALSE ;
END_IF ;
__EDTB20 := __EDTB16 ;
IF __EDTB20 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB21 := __EDTB16 ;
IF __EDTB21 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB22 := __EDTB16 ;
IF __EDTB22 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB23 := __EDTB16 ;
IF __EDTB23 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB24 := __EDTB16 ;
IF __EDTB24 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB25 := __EDTB16 ;
IF __EDTB25 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB26 := __EDTB16 ;
IF __EDTB26 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB27 := __EDTB16 ;
IF __EDTB27 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB28 := __EDTB16 ;
IF __EDTB28 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB29 := __EDTB16 ;
IF __EDTB29 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB30 := __EDTB16 ;
IF __EDTB30 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB31 := __EDTB16 ;
IF __EDTB31 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB32 := __EDTB16 ;
IF __EDTB32 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB33 := __EDTB16 ;
IF __EDTB33 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_2 := FALSE ;
END_IF ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,34
__ENDSTEPPRAGMA
(*Label :*)(**)
(* FB call: R_TRIG *)
R_TRIG_2(HMI_MOVEREV) ;
__EDTB34 := R_TRIG_2.Q ;
__EDTB35 := __EDTB34 ;
IF __EDTB35 THEN
(*Set coil*)
HMI_IND_REVDIR := TRUE ;
END_IF ;
__EDTB36 := __EDTB34 ;
IF __EDTB36 THEN
(*Reset coil*)
HMI_IND_FWDDIR := FALSE ;
END_IF ;
__EDTB37 := __EDTB34 ;
IF __EDTB37 THEN
(*Reset coil*)
HMI_MOVEFWD := FALSE ;
END_IF ;
__EDTB38 := __EDTB34 ;
IF __EDTB38 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB39 := __EDTB34 ;
IF __EDTB39 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB40 := __EDTB34 ;
IF __EDTB40 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB41 := __EDTB34 ;
IF __EDTB41 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB42 := __EDTB34 ;
IF __EDTB42 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_1 := TRUE ;
END_IF ;
__EDTB43 := __EDTB34 ;
IF __EDTB43 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_2 := FALSE ;
END_IF ;
__EDTB44 := __EDTB34 ;
IF __EDTB44 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB45 := __EDTB34 ;
IF __EDTB45 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB46 := __EDTB34 ;
IF __EDTB46 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB47 := __EDTB34 ;
IF __EDTB47 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB48 := __EDTB34 ;
IF __EDTB48 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB49 := __EDTB34 ;
IF __EDTB49 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_2 := TRUE ;
END_IF ;
__EDTB50 := __EDTB34 ;
IF __EDTB50 THEN
(*Reset coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_1 := FALSE ;
END_IF ;
__EDTB51 := __EDTB34 ;
IF __EDTB51 THEN
(*Set coil*)
UDFB_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_2 := TRUE ;
END_IF ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)
(* __EDTB16 *)
(* __EDTB17 *)
(* __EDTB18 *)
(* __EDTB19 *)
(* __EDTB20 *)
(* __EDTB21 *)
(* __EDTB22 *)
(* __EDTB23 *)
(* __EDTB24 *)
(* __EDTB25 *)
(* __EDTB26 *)
(* __EDTB27 *)
(* __EDTB28 *)
(* __EDTB29 *)
(* __EDTB30 *)
(* __EDTB31 *)
(* __EDTB32 *)
(* __EDTB33 *)
(* __EDTB34 *)
(* __EDTB35 *)
(* __EDTB36 *)
(* __EDTB37 *)
(* __EDTB38 *)
(* __EDTB39 *)
(* __EDTB40 *)
(* __EDTB41 *)
(* __EDTB42 *)
(* __EDTB43 *)
(* __EDTB44 *)
(* __EDTB45 *)
(* __EDTB46 *)
(* __EDTB47 *)
(* __EDTB48 *)
(* __EDTB49 *)
(* __EDTB50 *)
(* __EDTB51 *)

