(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := TRUE ;
IF __EDTB1 THEN
(* FB call: MC_Power *)
MC_Power_1(AXIS1, ENABLEPOWER, TRUE, TRUE, 0) ;
END_IF ;
__MO_MC_POWER_1 := __EDTB1 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,9
__ENDSTEPPRAGMA
(*Label :*)(**)
EXECUTEWRITEPARAM := MC_POWER_1.STATUS AND NOT(EXECUTEWRITEPARAM) ;
__EDTB2 := MC_POWER_1.STATUS ;
IF __EDTB2 THEN
(* FB call: MC_WriteParameter *)
MC_WriteParameter_1(AXIS1, EXECUTEWRITEPARAM, 1005, DUTYCYCLE, 0, 0) ;
END_IF ;
__MO_MC_WRITEPARAMETER_1 := __EDTB2 ;
__EDTB3 := __EDTB2 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,18
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB4 := TRUE ;
IF __EDTB4 THEN
(* FB call: MC_MoveVelocity *)
MC_MoveVelocity_1(AXIS1, EXECUTEMOTION, 1000.0, 5000.0, 5000.0, 0.0, 1, ) ;
END_IF ;
__MO_MC_MOVEVELOCITY_1 := __EDTB4 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,28
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB5 := MOVEFWD ;
__EDTB6 := _IO_X1_DO_05 ;
__EDTB7 := (__EDTB5 OR __EDTB6) AND NOT(STOP) ;
__EDTB8 := __EDTB7 ;
IF __EDTB8 THEN
(*Set coil*)
EXECUTEMOTION := TRUE ;
END_IF ;
_IO_X1_DO_05 := __EDTB7 ;
FWDDIR := __EDTB7 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,32
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB9 := MOVEREV ;
__EDTB10 := _IO_X1_DO_04 ;
__EDTB11 := (__EDTB9 OR __EDTB10) AND NOT(STOP) ;
__EDTB12 := __EDTB11 ;
IF __EDTB12 THEN
(*Set coil*)
EXECUTEMOTION := TRUE ;
END_IF ;
_IO_X1_DO_04 := __EDTB11 ;
REVDIR := __EDTB11 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,36
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB13 := STOP ;
IF __EDTB13 THEN
(*Reset coil*)
EXECUTEMOTION := FALSE ;
END_IF ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,38
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB14 := TRUE ;
IF __EDTB14 THEN
(* FB call: MC_Halt *)
MC_Halt_1(AXIS1, STOP, 5000.0, 0.0, ) ;
END_IF ;
__MO_MC_HALT_1 := __EDTB14 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)

