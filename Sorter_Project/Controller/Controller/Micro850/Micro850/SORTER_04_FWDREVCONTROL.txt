(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := TRUE ;
IF __EDTB1 THEN
(* FB call: UDFB_FWD_REV_CTL *)
UDFB_FWD_REV_CTL_1() ;
LOCAL_CONVEYOR_DIR_CTL_IO := UDFB_FWD_REV_CTL_1.UDFB_CONVEYOR_DIR_CTL_IO ;
END_IF ;
__MO_UDFB_FWD_REV_CTL_1 := __EDTB1 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,4
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB2 := TRUE ;
IF __EDTB2 THEN
_IO_X1_DO_00 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_1 := __EDTB2 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,7
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB3 := TRUE ;
IF __EDTB3 THEN
_IO_X1_DO_01 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INFEED_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_2 := __EDTB3 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,10
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB4 := TRUE ;
IF __EDTB4 THEN
_IO_X1_DO_02 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_3 := __EDTB4 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,13
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB5 := TRUE ;
IF __EDTB5 THEN
_IO_X1_DO_03 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INFEED_INCLINE_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_4 := __EDTB5 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,16
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB6 := TRUE ;
IF __EDTB6 THEN
_IO_X1_DO_04 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_5 := __EDTB6 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,19
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB7 := TRUE ;
IF __EDTB7 THEN
_IO_X1_DO_05 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_INCLINE_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_6 := __EDTB7 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,22
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB8 := TRUE ;
IF __EDTB8 THEN
_IO_X1_DO_06 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_7 := __EDTB8 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,25
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB9 := TRUE ;
IF __EDTB9 THEN
_IO_X1_DO_07 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_OUTFEED_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_8 := __EDTB9 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,28
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB10 := TRUE ;
IF __EDTB10 THEN
_IO_X1_DO_08 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_9 := __EDTB10 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,31
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB11 := TRUE ;
IF __EDTB11 THEN
_IO_X1_DO_09 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_SHORT_SORTER_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_10 := __EDTB11 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,34
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB12 := TRUE ;
IF __EDTB12 THEN
_IO_X1_DO_12 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_11 := __EDTB12 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,37
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB13 := TRUE ;
IF __EDTB13 THEN
_IO_X1_DO_13 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_SIZE_SORTER_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_12 := __EDTB13 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,40
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB14 := TRUE ;
IF __EDTB14 THEN
_IO_X1_DO_14 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_1) ;
END_IF ;
__MO_1GAIN_13 := __EDTB14 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,43
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB15 := TRUE ;
IF __EDTB15 THEN
_IO_X1_DO_15 := (  LOCAL_CONVEYOR_DIR_CTL_IO.IO_LONG_SORTER_CONVEYOR_2) ;
END_IF ;
__MO_1GAIN_14 := __EDTB15 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)
(* __EDTB12 *)
(* __EDTB13 *)
(* __EDTB14 *)
(* __EDTB15 *)

