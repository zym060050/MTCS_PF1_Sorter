(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := HMI_STARTEXECUTEMOTION ;
IF __EDTB1 THEN
(*Reset coil*)
HMI_STOP := FALSE ;
END_IF ;
__EDTB2 := HMI_STARTEXECUTEMOTION ;
IF __EDTB2 THEN
(*Set coil*)
HMI_VIS_STOP := TRUE ;
END_IF ;
__EDTB3 := HMI_STARTEXECUTEMOTION ;
IF __EDTB3 THEN
(*Set coil*)
HMI_VIS_FWD := TRUE ;
END_IF ;
__EDTB4 := HMI_STARTEXECUTEMOTION ;
IF __EDTB4 THEN
(*Set coil*)
HMI_VIS_REV := TRUE ;
END_IF ;
__EDTB5 := HMI_STARTEXECUTEMOTION ;
IF __EDTB5 THEN
(*Reset coil*)
HMI_VIS_START := FALSE ;
END_IF ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,7
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB6 := HMI_MOVEFWD AND HMI_STARTEXECUTEMOTION ;
__EDTB7 := __EDTB6 ;
IF __EDTB7 THEN
(*Set coil*)
HMI_STARTEXECUTEMOTION := TRUE ;
END_IF ;
HMI_IND_FWDDIR := __EDTB6 ;
__EDTB8 := __EDTB6 ;
IF __EDTB8 THEN
(*Reset coil*)
HMI_IND_REVDIR := FALSE ;
END_IF ;
_IO_X1_DO_05 := __EDTB6 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
__STEPPRAGMA
0,12
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB9 := HMI_MOVEREV AND HMI_STARTEXECUTEMOTION ;
__EDTB10 := __EDTB9 ;
IF __EDTB10 THEN
(*Set coil*)
HMI_STARTEXECUTEMOTION := TRUE ;
END_IF ;
HMI_IND_REVDIR := __EDTB9 ;
__EDTB11 := __EDTB9 ;
IF __EDTB11 THEN
(*Reset coil*)
HMI_IND_FWDDIR := FALSE ;
END_IF ;
_IO_X1_DO_04 := __EDTB9 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)
(* __EDTB9 *)
(* __EDTB10 *)
(* __EDTB11 *)

